[project]
name = "fastapi-base"
version = "0.1.0"
requires-python = ">=3.13"
readme = "README.md"
dependencies = [
    "alembic>=1.16.4",
    "celery>=5.5.3",
    "fastapi>=0.116.1",
    "fastapi-pagination>=0.13.3",
    "gunicorn>=23.0.0",
    "httpx>=0.28.1",
    "asyncpg>=0.30.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "python-json-logger>=3.3.0",
    "pyyaml>=6.0.2",
    "redis>=6.4.0",
    "sentry-sdk[fastapi]>=2.34.1",
    "sqlalchemy[asyncio]>=2.0.43",
    "sqlmodel>=0.0.24",
    "uvicorn>=0.35.0",
    "fastapi-cache2[redis]>=0.1.8",
    "setuptools>=80.9.0",
    "uuid-utils>=0.11.0",
    "python-jose[cryptography]>=3.3.0",
    "PyJWT>=2.8.0",
    "pydantic[email]>=2.11.7",
    "passlib[bcrypt]>=1.7.4",
    "langchain>=0.3.27",
    "openapi>=2.0.0",
    "argon2-cffi>=25.1.0",
    "nsepython>=2.97",
    "yfinance>=0.2.66",
    "langchain-huggingface>=0.3.1",
]

[tool.isort]
multi_line_output = 3
lines_after_imports = 2
line_length = 88
include_trailing_comma = true
sections = 'FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER'

[tool.black]
line-length = 100
include = '\.pyi?$'
extend-exclude = '''
(
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)
'''

[tool.ruff]
line-length = 100
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache", "migrations"]
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    # "I",  # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
lint.ignore = [
    "B904",
    "B006",
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.codespell]
ignore-words-list = 'selectin,THIRDPARTY'

[tool.coverage.report]
fail_under = 70
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "print\\(",                   # exclude all print statements
]


[tool.coverage.run]
omit = [
    '*tests/*',
    'src/core/enums.py',
    'src/core/backends.py',
    'src/core/config.py',
    'src/core/exceptions.py',
    'src/interfaces/*',
    'src/main.py',
]

[tool.mypy]
exclude = ["migrations/"]
# --strict
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
# --strict end

[[tool.mypy.overrides]]
module = ["fastapi_cache.*", "redis.*", "celery.*"]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "black>=25.1.0",
    "bump-pydantic>=0.8.0",
    "detect-secrets>=1.5.0",
    "isort>=6.0.1",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "psycopg2-binary>=2.9.10",
    "pytest>=8.4.1",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "requests>=2.32.4",
    "ruff>=0.12.8",
    "sqlalchemy-stubs>=0.4",
]
